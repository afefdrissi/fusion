@mixin typography($name,$size,$weight,$color,$spacing,$lineheight,$textalign){
    // @include typography($name,$size,$weight,$color,$spacing,$lineheight,$textalign);
    $props: (font-family:font($name),font-size:$size,font-weight:$weight,
    color:color($color),letter-spacing:$spacing,line-height:$lineheight,text-align:$textalign);
    @each $key,$value in $props {
        @if $value !=_{ 
            #{$key}:$value;
        }
      }    
   }

   @mixin flex($direction,$justify,$alignc,$aligni,$wrap){
    //@include flex($direction,$justify,$alignc,$aligni,$wrap);
    display:flex;
    $props: (flex-direction:$direction,justify-content:$justify,align-content:$alignc,
    align-items:$aligni,flex-wrap:$wrap);
    @each $key,$value in $props {
        @if $value !=_{ 
            #{$key}:$value;
        }
      }
  }

  $breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px,
    "1920": 1920px
);
//@include mq('tablet-wide') {}
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}
@mixin box($width,$height,$bgc,$bgi,$radius){
//@include box($width,$height,$bgc,$bgi,$radius);   
$props:(width:$width,height:$height,background-color:color($bgc),
background-image:image($bgi),border-radius:$radius);
    @each $key,$value in $props {
        @if $value !=_ { 
            #{$key}:$value;
        }
      }
}

  